{"ast":null,"code":"var _jsxFileName = \"/media/shankhar/chromeDownloads/sage/front-end/florida-movie-finder/florida-Movie-finder/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport movieBanner from './movieBanner.jpg';\nimport marker from './marker.png';\nimport Header from './components/Header';\nimport Banner from './components/Banner/Banner';\nimport Footer from './components/Footer';\nimport { getAllMovies, getMoviesWithPromoBanner, getMoviesLocations } from './Actions/MovieActions';\nimport FeaturedMovies from './components/FeaturedMovies';\nimport MapSection from './components/MapSection';\nimport Search from './components/Search';\n\nfunction App() {\n  const [moviesList, setMoviesList] = useState({\n    loading: true,\n    movies: []\n  });\n  const [filteredList, setFilteredList] = useState({\n    loading: true,\n    movies: []\n  });\n  const [locationLists, setLocationLists] = useState([]);\n  const [moviesListWithBanner, setMoviesListWithBanner] = useState({\n    loading: true,\n    movies: []\n  });\n  useEffect(() => {\n    const fetchAllMovies = async () => {\n      setMoviesList({\n        loading: false,\n        movies: await getAllMovies()\n      });\n      setFilteredList({\n        loading: false,\n        movies: await getAllMovies()\n      });\n    };\n\n    const fetchMoviesWithBanner = async () => {\n      setMoviesListWithBanner({\n        loading: false,\n        movies: await getMoviesWithPromoBanner()\n      });\n    };\n\n    const locationList = async () => {\n      setLocationLists(await getMoviesLocations());\n    };\n\n    fetchMoviesWithBanner();\n    fetchAllMovies();\n    locationList();\n  }, []);\n\n  const searchHandler = (e, field) => {\n    const searchTerms = e.target.value;\n    let localMovies = moviesList.movies;\n    let terms;\n    let afterFilterList = localMovies.filter(mv => {\n      if (mv[field] !== null && mv[field] !== undefined) {\n        if (field == \"release_year\") {\n          terms = mv[field] == parseInt(searchTerms) ? 0 : -1;\n        } else {\n          terms = mv[field].toLowerCase().indexOf(searchTerms.toLowerCase());\n        }\n      }\n\n      if (terms != -1) {\n        return mv;\n      }\n\n      return;\n    });\n\n    if (searchTerms.length < 1) {\n      afterFilterList = localMovies;\n    }\n\n    setFilteredList({\n      loading: false,\n      movies: afterFilterList\n    });\n    localMovies = moviesList.movies;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Banner, {\n    movieBanner: movieBanner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FeaturedMovies, {\n    moviesWithBanner: moviesListWithBanner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    locationList: locationLists,\n    searchHandler: searchHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MapSection, {\n    zoomLevel: 4,\n    moviesList: filteredList,\n    marker: marker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/media/shankhar/chromeDownloads/sage/front-end/florida-movie-finder/florida-Movie-finder/src/App.js"],"names":["React","useState","useEffect","movieBanner","marker","Header","Banner","Footer","getAllMovies","getMoviesWithPromoBanner","getMoviesLocations","FeaturedMovies","MapSection","Search","App","moviesList","setMoviesList","loading","movies","filteredList","setFilteredList","locationLists","setLocationLists","moviesListWithBanner","setMoviesListWithBanner","fetchAllMovies","fetchMoviesWithBanner","locationList","searchHandler","e","field","searchTerms","target","value","localMovies","terms","afterFilterList","filter","mv","undefined","parseInt","toLowerCase","indexOf","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport movieBanner from './movieBanner.jpg';\nimport marker from './marker.png';\n\nimport Header from './components/Header';\nimport Banner from './components/Banner/Banner';\nimport Footer from './components/Footer';\nimport { getAllMovies, getMoviesWithPromoBanner, getMoviesLocations } from './Actions/MovieActions';\nimport FeaturedMovies from './components/FeaturedMovies';\nimport MapSection from './components/MapSection';\nimport Search from './components/Search';\n\nfunction App() {\n  const [moviesList, setMoviesList] = useState({\n    loading: true,\n    movies: []\n  });\n  const [filteredList, setFilteredList] = useState({\n    loading: true,\n    movies: []\n  });\n  const [locationLists, setLocationLists] = useState([]);\n  const [moviesListWithBanner, setMoviesListWithBanner] = useState({\n    loading: true,\n    movies: []\n  });\n\n  useEffect(() => {\n    const fetchAllMovies = async () => {\n      setMoviesList({\n        loading: false,\n        movies: await getAllMovies()\n      });\n      setFilteredList({\n        loading: false,\n        movies: await getAllMovies()\n      });\n    }\n    const fetchMoviesWithBanner = async () => {\n      setMoviesListWithBanner({\n        loading: false,\n        movies: await getMoviesWithPromoBanner()\n      });\n    }\n\n    const locationList = async () => {\n      setLocationLists(await getMoviesLocations());\n    }\n\n    fetchMoviesWithBanner();\n    fetchAllMovies();\n    locationList();\n  }, []);\n\n  const searchHandler = (e, field) => {\n    const searchTerms = e.target.value;\n    let localMovies = moviesList.movies;\n\n    let terms;\n\n    let afterFilterList = localMovies.filter(mv => {\n      if(mv[field] !== null && mv[field] !== undefined) {\n        if(field == \"release_year\") {\n          terms = (mv[field] == parseInt(searchTerms)) ? 0 : -1;\n        } else {\n          terms = mv[field].toLowerCase().indexOf(searchTerms.toLowerCase());\n        }\n      }\n\n      if(terms != -1) {\n        return mv\n      }\n\n      return;\n    });\n\n    if(searchTerms.length < 1) {\n      afterFilterList = localMovies \n    }\n\n    setFilteredList({\n      loading: false,\n      movies: afterFilterList\n    })\n    localMovies = moviesList.movies;\n  }\n\n  return (\n    <>\n      <Header />\n      <Banner movieBanner={movieBanner}/>\n      <FeaturedMovies moviesWithBanner={moviesListWithBanner}/>\n      <Search locationList={locationLists} searchHandler={searchHandler}/>\n      <MapSection zoomLevel={4} moviesList={filteredList} marker={marker}/>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}