{"ast":null,"code":"var _jsxFileName = \"/media/shankhar/chromeDownloads/sage/front-end/florida-movie-finder/florida-Movie-finder/src/components/MapSection.js\";\nimport React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { GOOGLE_MAP_API_KEY } from '../consts/consts';\nimport LocationPin from './LocationPin';\nimport mapStyles from './mapStyles';\nimport Spinner from './Spinner';\n\nconst createMapOptions = maps => {\n  return {\n    fullscreenControl: false\n  };\n};\n\nfunction MapSection({\n  zoomLevel,\n  moviesList: {\n    movies,\n    loading\n  },\n  marker\n}) {\n  const [locationWithLatLong, setLocationWithLatLong] = useState(null);\n  const [show, setShow] = useState(false);\n  let locatlLocation;\n  let locationPins;\n  console.log(movies);\n  useEffect(() => {\n    if (movies != undefined) setLocationWithLatLong(movies[0]);\n  }, [movies]);\n\n  if (locationWithLatLong != undefined) {\n    const addressInfo = locationWithLatLong[\"addressInfo\"];\n    locatlLocation = {\n      lat: addressInfo[\"lat\"],\n      lng: addressInfo[\"lng\"]\n    };\n  }\n\n  ;\n\n  const handlerMarker = e => {\n    setShow(!show);\n    const pin = document.getElementById(\"pin-\" + e);\n    pin.classList.toggle(\"active\");\n    const close = pin.querySelector(\".close\");\n    close.addEventListener('click', () => {\n      pin.classList.remove(\"active\");\n    });\n  };\n\n  if (movies != undefined && movies.length > 0) {\n    locationPins = movies.map((mv, i) => {\n      const addressInfo = mv.addressInfo;\n      return /*#__PURE__*/React.createElement(LocationPin, {\n        key: i,\n        id: i,\n        lat: addressInfo.lat,\n        lng: addressInfo.lng,\n        marker: marker,\n        details: [mv.title, mv.locations],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"google-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, !loading && locatlLocation ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: GOOGLE_MAP_API_KEY,\n      disableDefaultUI: true\n    },\n    defaultCenter: locatlLocation,\n    defaultZoom: zoomLevel,\n    options: createMapOptions,\n    styles: mapStyles,\n    onChildClick: e => handlerMarker(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, locationPins)) : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 36\n    }\n  })));\n}\n\nexport default MapSection;","map":{"version":3,"sources":["/media/shankhar/chromeDownloads/sage/front-end/florida-movie-finder/florida-Movie-finder/src/components/MapSection.js"],"names":["React","useEffect","useState","GoogleMapReact","GOOGLE_MAP_API_KEY","LocationPin","mapStyles","Spinner","createMapOptions","maps","fullscreenControl","MapSection","zoomLevel","moviesList","movies","loading","marker","locationWithLatLong","setLocationWithLatLong","show","setShow","locatlLocation","locationPins","console","log","undefined","addressInfo","lat","lng","handlerMarker","e","pin","document","getElementById","classList","toggle","close","querySelector","addEventListener","remove","length","map","mv","i","title","locations","key","disableDefaultUI"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport { GOOGLE_MAP_API_KEY } from '../consts/consts'\nimport LocationPin from './LocationPin'\nimport mapStyles from './mapStyles'\nimport Spinner from './Spinner'\n\nconst createMapOptions = (maps) => {\n    return {\n      fullscreenControl: false\n    }\n  }\n\nfunction MapSection({ zoomLevel, moviesList:{movies,loading}, marker }) {\n    const [locationWithLatLong, setLocationWithLatLong] = useState(null);\n    const [show, setShow] = useState(false);\n    let locatlLocation;\n    let locationPins;\n\n    console.log(movies)\n\n    useEffect(() => {\n        if(movies != undefined) setLocationWithLatLong(movies[0])\n    }, [movies]);\n\n    if(locationWithLatLong != undefined) { \n        const addressInfo = locationWithLatLong[\"addressInfo\"];\n        locatlLocation = {\n            lat:addressInfo[\"lat\"],\n            lng:addressInfo[\"lng\"]\n        }\n    };\n\n    const handlerMarker = (e) => {\n        setShow(!show);\n        const pin = document.getElementById(\"pin-\"+e);\n        pin.classList.toggle(\"active\");\n        const close = pin.querySelector(\".close\");\n        \n        close.addEventListener('click', () => {\n            pin.classList.remove(\"active\");\n        });\n    }\n    \n    if(movies!= undefined && movies.length > 0) {\n        locationPins = movies.map((mv, i) => {\n            const addressInfo = mv.addressInfo;\n            return (\n            <LocationPin key={i} id={i} lat={addressInfo.lat} lng={addressInfo.lng} marker ={marker} details={[mv.title,mv.locations]}/>)\n            \n        });\n    }\n\n    return (\n        <div className=\"map-block\">\n            <div className=\"google-map\">\n            {!loading && locatlLocation ? (\n            <>\n        <GoogleMapReact\n                bootstrapURLKeys={{ key: GOOGLE_MAP_API_KEY, disableDefaultUI: true }}\n                defaultCenter={locatlLocation}\n                defaultZoom={zoomLevel}\n                options={createMapOptions}\n                styles={mapStyles}\n                onChildClick ={(e => handlerMarker(e))}\n            >\n                {locationPins}\n            </GoogleMapReact></>): <Spinner />}\n            </div>\n        </div>\n    )\n}\n\nexport default MapSection\n"]},"metadata":{},"sourceType":"module"}